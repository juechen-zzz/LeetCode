/* 
包含整数的二维矩阵 M 表示一个图片的灰度。你需要设计一个平滑器来让每一个单元的灰度成为平均灰度 (向下舍入) ，平均灰度的计算是周围的8个单元和它本身的值求平均
如果周围的单元格不足八个，则尽可能多的利用它们。

示例 1:

输入:
[[1,1,1],
 [1,0,1],
 [1,1,1]]
输出:
[[0, 0, 0],
 [0, 0, 0],
 [0, 0, 0]]
解释:
对于点 (0,0), (0,2), (2,0), (2,2): 平均(3/4) = 平均(0.75) = 0
对于点 (0,1), (1,0), (1,2), (2,1): 平均(5/6) = 平均(0.83333333) = 0
对于点 (1,1): 平均(8/9) = 平均(0.88888889) = 0

 */

class Solution {
    public int[][] imageSmoother(int[][] M) {
        int n = M.length, m = M[0].length;
        int[][] ans = new int[n][m];

        for (int i = 0; i < n; i++) {
            for (int j = 0; j < m; j++) {
                int count = 0;
                for (int nr = i - 1; nr <= i + 1; nr++) {
                    for (int nc = j - 1; nc <= j + 1; nc++) {
                        if (0 <= nr && nr < n && 0 <= nc && nc < m) {
                            ans[i][j] += M[nr][nc];
                            count++;
                        }
                    }
                }
                ans[i][j] /= count;
            }
        }

        return ans;
    }
}